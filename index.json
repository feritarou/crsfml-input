{"repository_name":"github.com/mathalaxy/crsfml-input","body":"[![GitHub release](https://img.shields.io/github/release/mathalaxy/crsfml-input.svg)](https://github.com/mathalaxy/crsfml-input/releases)\n\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://mathalaxy.github.io/crsfml-input/)\n\n# CrSFML-Input\n**Customizable keyboard/joystick/mouse input bindings for CrSFML apps**\n\nThis shard extends [CrSFML](https://github.com/oprypin/crsfml#readme)'s event-driven and continuous input facilities with customizable bindings. User input is organized around \"input events\" and \"input queries\". Which actual input is mapped to these entities then depends on a YAML config file (or a section of another if you prefer), making customization as simple as it gets.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     crsfml-input:\n       github: mathalaxy/crsfml-input\n   ```\n\n2. Run `shards install`\n\n## Usage\n\nTo use CrSFML-Input you first need to require it from your project:\n```crystal\nrequire \"crsfml-input\"\n# CrSFML-Input requires \"crsfml\" for you\n```\n\nAll functions are \"static\" class methods of the `Input` module which serves as a namespace.\n\nThe general idea behind CrSFML-Input is to replace CrSFML's simple mechanism to identify keys/joystick buttons etc. through event classes and realtime access functions by queries to an intermediate layer of *input events* and *input queries* identified by strings. Binding these to particular input devices (keys, buttons, or joystick axes) thus becomes separated from all event/status checks, and in fact from the code as a whole.\n\nFor instance, instead of the very specific\n```crystal\ncase key_event.code\nwhen SF::Key::Space\n  # toggle pause screen ...\nend\n```\nyou could write more generally,\n```crystal\ncase Input.event?(some_event)\nwhen \"pause\"\n  # toggle pause screen ...\nend\n```\nand let the user decide which particular key or key combination should be bound to the \"pause\" event.\n\nSimilarly, you could use `Input.query(\"run\")` to determine the state of whichever key/joystick button/... is bound to \"run\".\nOnce you have set up your events and queries, CrSFML-Input will handle the connection between them and the actual user input.\n\n### Defining input events and queries\n\nTo make CrSFML-Input work, you first need to define some (abstract) input events and default bindings (concrete keys/buttons). Choose descriptive names for them - something like `toggle pause` or `jump` - and combine them into a YAML structure under the section headings `events` and `queries`, respectively:\n\n```yaml\nevents:\n  step:\n    key: Up\n  rush:\n    key: Ctrl+Shift+Up\n    # Ctrl is an alias for SFML's `Control` key code\n    # Alt, System, LCtrl, RShift etc. work just the same\n  show help:\n    # multiple key bindings for the same event:\n    key:\n    - F1\n    - Alt+H\nqueries:\n  charging:\n    key: LShift+Space\n```\n\nLet CrSFML-Input know about it by setting the `Input.default_bindings` property to a `YAML::Any` or `String`:\n\n```crystal\nInput.default_bindings = yaml_or_string\n```\n\nIf you do not want to embed your defaults within the code, call `Input.load_default_bindings` instead to read directly from a YAML file.\n\n### Custom bindings\n\nOnce the *default* bindings are set up for all available input events and queries, you can now easily override some of them with (user) *customized* ones using the `Input.bindings` property:\n\n```crystal\n# Override just selected input events\n# all other default bindings remain in effect\nInput.bindings = <<-NEW_YAML\nevents:\n  show help:\n    key: Ctrl+H\nNEW_YAML\n\n# Load customized bindings directly from a file\nInput.load_bindings \"bindtest.yml\"\n\n# Use a subsection of a bigger YAML file\ncfg = YAMl.parse \"config.yml\"\nif node = cfg.dig(\"custom\", \"input\", \"user-overrides\")\n  Input.bindings = node\nend\n```\n\n### Using input events\nTo handle your abstract input events in a CrSFML app, place a call to `Input.event?` within your event loop and check its return value instead of the SFML event itself:\n\n```crystal\nwindow = SF::Window.new(SF::VideoMode.new(400, 300), \"Hi\")\n\nwhile window.open?\n  while ev = window.poll_event\n    # a nested case switch lets you\n    # define the subset of CrSFML\n    # events Input should handle\n    case ev\n    when SF::Event::Closed\n      window.close; break\n    when SF::Event::MouseButtonClicked\n      # handle it\n    else\n      # Let CrSFML-Input process the event.\n      # If a mapping is defined for ev,\n      # it will return the input event string.\n      case Input.event?(ev)\n      when \"step\"\n        # ...\n      when \"rush\"\n        # ...\n      when \"show help\"\n        # ...\n      else\n        # return value is nil if no mapping is found\n      end\n    end\n  end\n\n  window.clear\n  window.display\nend\n```\n\n## Development\n\nPlanned features list:\n\n- Handle the following *input events*:\n  - [x] keyboard events\n  - [ ] joystick button events\n  - [ ] mouse button events\n  - [ ] mouse wheel events\n- Handle the following *input queries*:\n  - [X] keyboard states\n  - [ ] mouse button states\n  - [ ] joystick button states\n  - [ ] joystick axes states\n- [ ] Provide an option to define fallback bindings when e.g. a joystick is disconnected\n\n## Contributing\n\n1. Fork it (<https://github.com/mathalaxy/crsfml-input/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [mathalaxy](https://github.com/mathalaxy) - creator and maintainer\n","program":{"html_id":"github.com/mathalaxy/crsfml-input/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/mathalaxy/crsfml-input","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TIMEOUT","name":"TIMEOUT","value":"20","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/mathalaxy/crsfml-input/Input","path":"Input.html","kind":"module","full_name":"Input","name":"Input","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"bindings.cr","line_number":3,"url":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/bindings.cr"},{"filename":"crsfml-input.cr","line_number":17,"url":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/crsfml-input.cr"}],"repository_name":"github.com/mathalaxy/crsfml-input","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/mathalaxy/crsfml-input/Input","kind":"module","full_name":"Input","name":"Input"}],"subclasses":[],"including_types":[],"namespace":null,"doc":"Namespace for all \"static\" functions provided by CrSFML-Input.","summary":"<p>Namespace for all \"static\" functions provided by CrSFML-Input.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"bindings=(yaml:YAML::Any)-instance-method","html_id":"bindings=(yaml:YAML::Any)-instance-method","name":"bindings=","doc":"Sets up the custom input bindings based on *yaml* data.","summary":"<p>Sets up the custom input bindings based on <em>yaml</em> data.</p>","abstract":false,"args":[{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Any"}],"args_string":"(yaml : YAML::Any)","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/crsfml-input.cr#L49","def":{"name":"bindings=","args":[{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"parse_yaml(yaml, @@bindings)"}},{"id":"bindings=(yaml_string:String)-instance-method","html_id":"bindings=(yaml_string:String)-instance-method","name":"bindings=","doc":"Sets up the custom input bindings based on a *yaml_string*.\nThis is a shortcut for `bindings = YAML.parse(yaml_string)`.","summary":"<p>Sets up the custom input bindings based on a <em>yaml_string</em>.</p>","abstract":false,"args":[{"name":"yaml_string","doc":null,"default_value":"","external_name":"yaml_string","restriction":"String"}],"args_string":"(yaml_string : String)","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/crsfml-input.cr#L55","def":{"name":"bindings=","args":[{"name":"yaml_string","doc":null,"default_value":"","external_name":"yaml_string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.bindings = (YAML.parse(yaml_string))"}},{"id":"default_bindings=(yaml:YAML::Any)-instance-method","html_id":"default_bindings=(yaml:YAML::Any)-instance-method","name":"default_bindings=","doc":"Sets up the default input bindings based on *yaml* data.","summary":"<p>Sets up the default input bindings based on <em>yaml</em> data.</p>","abstract":false,"args":[{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Any"}],"args_string":"(yaml : YAML::Any)","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/crsfml-input.cr#L32","def":{"name":"default_bindings=","args":[{"name":"yaml","doc":null,"default_value":"","external_name":"yaml","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"parse_yaml(yaml, @@default_bindings)"}},{"id":"default_bindings=(yaml_string:String)-instance-method","html_id":"default_bindings=(yaml_string:String)-instance-method","name":"default_bindings=","doc":"Sets up the default input bindings based on a *yaml_string*.\nThis is a shortcut for `default_bindings = YAML.parse(yaml_string)`.","summary":"<p>Sets up the default input bindings based on a <em>yaml_string</em>.</p>","abstract":false,"args":[{"name":"yaml_string","doc":null,"default_value":"","external_name":"yaml_string","restriction":"String"}],"args_string":"(yaml_string : String)","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/crsfml-input.cr#L38","def":{"name":"default_bindings=","args":[{"name":"yaml_string","doc":null,"default_value":"","external_name":"yaml_string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.default_bindings = (YAML.parse(yaml_string))"}},{"id":"event?(sfml_event:SF::Event):String?-instance-method","html_id":"event?(sfml_event:SF::Event):String?-instance-method","name":"event?","doc":"Call this method in your CrSFML window's event loop to let CrSFML-Input handle the *sfml_event*.\nThe return value is either the name of the input event if a binding was found, or `nil` otherwise.","summary":"<p>Call this method in your CrSFML window's event loop to let CrSFML-Input handle the <em>sfml_event</em>.</p>","abstract":false,"args":[{"name":"sfml_event","doc":null,"default_value":"","external_name":"sfml_event","restriction":"SF::Event"}],"args_string":"(sfml_event : SF::Event) : String?","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/crsfml-input.cr#L71","def":{"name":"event?","args":[{"name":"sfml_event","doc":null,"default_value":"","external_name":"sfml_event","restriction":"SF::Event"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"case sfml_event\nwhen SF::Event::KeyEvent\n  modifiers = Bindings::Modifiers::None\n  {% for which in [:L, :R] %} {% for key in [:Shift, :Control, :Alt, :System] %}\n      modifiers |= Bindings::Modifiers:{{ which }}{% if key == (:Control) %}Ctrl{% else %}{{ key.id }}{% end %} if SF::Keyboard.key_pressed?(SF::Keyboard:{{ which }}{{ key.id }})\n      {% end %} {% end %}\n  key = sfml_event.code\n  if event = @@bindings.key_pressed_bindings[{modifiers, key}]?\n    event\n  else\n    if default_event = @@default_bindings.key_pressed_bindings[{modifiers, key}]?\n      if @@bindings.key_pressed_bindings.values.includes?(default_event)\n        nil\n      else\n        default_event\n      end\n    end\n  end\nend"}},{"id":"load_bindings(file:Path|String)-instance-method","html_id":"load_bindings(file:Path|String)-instance-method","name":"load_bindings","doc":"Loads custom input bindings from a *file*.\nThis is a shortcut for `bindings = File.open(file) { |f| YAML.parse f }`.","summary":"<p>Loads custom input bindings from a <em>file</em>.</p>","abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"Path | String"}],"args_string":"(file : Path | String)","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/crsfml-input.cr#L61","def":{"name":"load_bindings","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"Path | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.bindings = (File.open(file) do |f|\n  YAML.parse(f)\nend)"}},{"id":"load_default_bindings(file:Path|String)-instance-method","html_id":"load_default_bindings(file:Path|String)-instance-method","name":"load_default_bindings","doc":"Loads the default input bindings from a *file*.\nThis is a shortcut for `default_bindings = File.open(file) { |f| YAML.parse f }`.","summary":"<p>Loads the default input bindings from a <em>file</em>.</p>","abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"Path | String"}],"args_string":"(file : Path | String)","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/crsfml-input.cr#L44","def":{"name":"load_default_bindings","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"Path | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.default_bindings = (File.open(file) do |f|\n  YAML.parse(f)\nend)"}},{"id":"query(id:String):Bool-instance-method","html_id":"query(id:String):Bool-instance-method","name":"query","doc":"Queries the state of an input key/button bound to the input query *id*.\nIf the query is bound to keyboard input, the method returns `true` if `SF::Keyboard.key_pressed?` returns `true` for all keys in the binding.","summary":"<p>Queries the state of an input key/button bound to the input query <em>id</em>.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String"}],"args_string":"(id : String) : Bool","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/crsfml-input.cr#L98","def":{"name":"query","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if bindings = (@@bindings.query_bindings[id]? || @@default_bindings.query_bindings[id]?)\n  bindings.any? do |binding|\n    case binding\n    when Bindings::KeyBinding\n      modifiers, key = binding\n      mods_pressed = true\n      modifiers.each do |modifier|\n        code = SF::Keyboard::Key.parse(modifier.to_s)\n        if SF::Keyboard.key_pressed?(code)\n        else\n          mods_pressed = false\n          break\n        end\n      end\n      key_pressed = SF::Keyboard.key_pressed?(SF::Keyboard::Key.parse(key.to_s))\n      mods_pressed && key_pressed\n    else\n      false\n    end\n  end\nelse\n  false\nend"}}],"macros":[],"types":[{"html_id":"github.com/mathalaxy/crsfml-input/Input/Bindings","path":"Input/Bindings.html","kind":"class","full_name":"Input::Bindings","name":"Bindings","abstract":false,"superclass":{"html_id":"github.com/mathalaxy/crsfml-input/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/mathalaxy/crsfml-input/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/mathalaxy/crsfml-input/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"bindings.cr","line_number":5,"url":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/bindings.cr"}],"repository_name":"github.com/mathalaxy/crsfml-input","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mathalaxy/crsfml-input/Input","kind":"module","full_name":"Input","name":"Input"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"add_key_pressed_binding(name:String,binding:String)-instance-method","html_id":"add_key_pressed_binding(name:String,binding:String)-instance-method","name":"add_key_pressed_binding","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"binding","doc":null,"default_value":"","external_name":"binding","restriction":"String"}],"args_string":"(name : String, binding : String)","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/bindings.cr#L41","def":{"name":"add_key_pressed_binding","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"binding","doc":null,"default_value":"","external_name":"binding","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"tuples = parse_key_binding(binding)\ntuples.each do |t|\n  @key_pressed_bindings[t] = name\nend\n"}},{"id":"add_key_query_binding(name:String,binding:String)-instance-method","html_id":"add_key_query_binding(name:String,binding:String)-instance-method","name":"add_key_query_binding","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"binding","doc":null,"default_value":"","external_name":"binding","restriction":"String"}],"args_string":"(name : String, binding : String)","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/bindings.cr#L48","def":{"name":"add_key_query_binding","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"binding","doc":null,"default_value":"","external_name":"binding","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"tuples = parse_key_binding(binding)\nif @query_bindings.has_key?(name)\n  @query_bindings[name].concat(tuples)\nelse\n  @query_bindings[name] = tuples.to_set\nend\n"}},{"id":"key_pressed_bindings:Hash({Input::Bindings::Modifiers,SF::Keyboard::Key},String)-instance-method","html_id":"key_pressed_bindings:Hash({Input::Bindings::Modifiers,SF::Keyboard::Key},String)-instance-method","name":"key_pressed_bindings","doc":"Returns all registered key bindings for input events.","summary":"<p>Returns all registered key bindings for input events.</p>","abstract":false,"args":[],"args_string":" : Hash({Input::Bindings::Modifiers, SF::Keyboard::Key}, String)","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/bindings.cr#L31","def":{"name":"key_pressed_bindings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@key_pressed_bindings"}},{"id":"query_bindings:Hash(String,Set({Input::Bindings::Modifiers,SF::Keyboard::Key}))-instance-method","html_id":"query_bindings:Hash(String,Set({Input::Bindings::Modifiers,SF::Keyboard::Key}))-instance-method","name":"query_bindings","doc":"Returns all registered bindings for input queries.","summary":"<p>Returns all registered bindings for input queries.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Set({Input::Bindings::Modifiers, SF::Keyboard::Key}))","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/bindings.cr#L34","def":{"name":"query_bindings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@query_bindings"}}],"macros":[],"types":[{"html_id":"github.com/mathalaxy/crsfml-input/Input/Bindings/KeyBinding","path":"Input/Bindings/KeyBinding.html","kind":"alias","full_name":"Input::Bindings::KeyBinding","name":"KeyBinding","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"bindings.cr","line_number":24,"url":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/bindings.cr"}],"repository_name":"github.com/mathalaxy/crsfml-input","program":false,"enum":false,"alias":true,"aliased":"Tuple(Input::Bindings::Modifiers, SF::Keyboard::Key)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mathalaxy/crsfml-input/Input/Bindings","kind":"class","full_name":"Input::Bindings","name":"Bindings"},"doc":"One particular key, or key/modifiers combination, that can be bound to an input event/input query.","summary":"<p>One particular key, or key/modifiers combination, that can be bound to an input event/input query.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/mathalaxy/crsfml-input/Input/Bindings/Modifiers","path":"Input/Bindings/Modifiers.html","kind":"enum","full_name":"Input::Bindings::Modifiers","name":"Modifiers","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/mathalaxy/crsfml-input/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/mathalaxy/crsfml-input/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/mathalaxy/crsfml-input/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/mathalaxy/crsfml-input/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"bindings.cr","line_number":12,"url":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/bindings.cr"}],"repository_name":"github.com/mathalaxy/crsfml-input","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"LShift","name":"LShift","value":"1","doc":null,"summary":null},{"id":"RShift","name":"RShift","value":"2","doc":null,"summary":null},{"id":"LCtrl","name":"LCtrl","value":"4","doc":null,"summary":null},{"id":"RCtrl","name":"RCtrl","value":"8","doc":null,"summary":null},{"id":"LAlt","name":"LAlt","value":"16","doc":null,"summary":null},{"id":"RAlt","name":"RAlt","value":"32","doc":null,"summary":null},{"id":"LSystem","name":"LSystem","value":"64","doc":null,"summary":null},{"id":"RSystem","name":"RSystem","value":"128","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mathalaxy/crsfml-input/Input/Bindings","kind":"class","full_name":"Input::Bindings","name":"Bindings"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"l_alt?-instance-method","html_id":"l_alt?-instance-method","name":"l_alt?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/bindings.cr#L15","def":{"name":"l_alt?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(LAlt)"}},{"id":"l_ctrl?-instance-method","html_id":"l_ctrl?-instance-method","name":"l_ctrl?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/bindings.cr#L14","def":{"name":"l_ctrl?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(LCtrl)"}},{"id":"l_shift?-instance-method","html_id":"l_shift?-instance-method","name":"l_shift?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/bindings.cr#L13","def":{"name":"l_shift?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(LShift)"}},{"id":"l_system?-instance-method","html_id":"l_system?-instance-method","name":"l_system?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/bindings.cr#L16","def":{"name":"l_system?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(LSystem)"}},{"id":"none?-instance-method","html_id":"none?-instance-method","name":"none?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/bindings.cr#L12","def":{"name":"none?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value == 0"}},{"id":"r_alt?-instance-method","html_id":"r_alt?-instance-method","name":"r_alt?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/bindings.cr#L15","def":{"name":"r_alt?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(RAlt)"}},{"id":"r_ctrl?-instance-method","html_id":"r_ctrl?-instance-method","name":"r_ctrl?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/bindings.cr#L14","def":{"name":"r_ctrl?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(RCtrl)"}},{"id":"r_shift?-instance-method","html_id":"r_shift?-instance-method","name":"r_shift?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/bindings.cr#L13","def":{"name":"r_shift?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(RShift)"}},{"id":"r_system?-instance-method","html_id":"r_system?-instance-method","name":"r_system?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/bindings.cr#L16","def":{"name":"r_system?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(RSystem)"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/mathalaxy/crsfml-input/SF","path":"SF.html","kind":"module","full_name":"SF","name":"SF","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crsfml-input.cr","line_number":1,"url":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/crsfml-input.cr"}],"repository_name":"github.com/mathalaxy/crsfml-input","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"If CrSFML is unavailable, emulate its structure with dummies so crystal docs does not fail","summary":"<p>If CrSFML is unavailable, emulate its structure with dummies so crystal docs does not fail</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/mathalaxy/crsfml-input/SF/Keyboard","path":"SF/Keyboard.html","kind":"module","full_name":"SF::Keyboard","name":"Keyboard","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"crsfml-input.cr","line_number":1,"url":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/crsfml-input.cr"}],"repository_name":"github.com/mathalaxy/crsfml-input","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mathalaxy/crsfml-input/SF","kind":"module","full_name":"SF","name":"SF"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/mathalaxy/crsfml-input/SF/Keyboard/Key","path":"SF/Keyboard/Key.html","kind":"enum","full_name":"SF::Keyboard::Key","name":"Key","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/mathalaxy/crsfml-input/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/mathalaxy/crsfml-input/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/mathalaxy/crsfml-input/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/mathalaxy/crsfml-input/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"crsfml-input.cr","line_number":1,"url":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/crsfml-input.cr"}],"repository_name":"github.com/mathalaxy/crsfml-input","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Dummy","name":"Dummy","value":"0","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/mathalaxy/crsfml-input/SF/Keyboard","kind":"module","full_name":"SF::Keyboard","name":"Keyboard"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"dummy?-instance-method","html_id":"dummy?-instance-method","name":"dummy?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/mathalaxy/crsfml-input/blob/c14cdf4dab08825e7080db8a6daf5d9440fb06be/src/crsfml-input.cr#L1","def":{"name":"dummy?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Dummy"}}],"macros":[],"types":[]}]}]}]}}